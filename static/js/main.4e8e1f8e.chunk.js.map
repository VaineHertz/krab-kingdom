{"version":3,"sources":["fonts/open-dyslexic/OpenDyslexic-Bold.otf","App.js","index.js","reportWebVitals.js"],"names":["module","exports","__webpack_require__","p","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","App","canvas","ctx","_useWindowDimensions","_useState","useState","_useState2","Object","slicedToArray","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","canvasRef","useRef","current","getContext","canvasScale","console","log","fillStyle","fillRect","react_default","a","createElement","className","rel","type","href","ref","src","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById","init"],"mappings":"wKAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uJCKxC,SAASC,IACP,IAAAC,EAAmDC,OACnD,MAAO,CACLC,MAFFF,EAAQG,WAGNC,OAHFJ,EAA2BK,aA4DdC,ICrDXC,EAAQC,EDqDGF,EAtCf,WACE,IACIC,EADJE,EAhBF,WACE,IAAAC,EAAgDC,mBAASZ,KAAzDa,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAOK,EAAPH,EAAA,GAAyBI,EAAzBJ,EAAA,GAWA,OATAK,oBAAU,WACR,SAASC,IACPF,EAAoBjB,KAItB,OADAE,OAAOkB,iBAAiB,SAAUD,GAC3B,kBAAMjB,OAAOmB,oBAAoB,SAAUF,KACjD,IAEIH,EAImBM,GAAVnB,GAAhBO,EAAQL,OAARK,EAAgBP,OAEVoB,EAAYC,iBAAO,MAYzB,OAXAN,oBAAU,WAER,IAAMT,GADND,EAASe,EAAUE,SACAC,WAAW,MAC1BC,EAAcxB,EAAM,KACxBK,EAAOL,MAAQ,KAAOwB,EACtBnB,EAAOH,OAAS,IAAMsB,EACtBC,QAAQC,IAAIrB,EAAOL,MAAQ,WAAaK,EAAOH,QAC/CI,EAAIqB,UAAY,kBAChBrB,EAAIsB,SAAS,EAAG,EAAGvB,EAAOL,MAAOK,EAAOH,SACtC,IAGF2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAME,IAAI,aAAaC,KAAK,WAAWC,KAAK,cAChDN,EAAAC,EAAAC,cAAA,aAEDF,EAAAC,EAAAC,cAAA,YACGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,gBAGAH,EAAAC,EAAAC,cAAA,UAAQK,IAAKhB,IACbS,EAAAC,EAAAC,cAAA,UAAQM,IAAI,qEACZR,EAAAC,EAAAC,cAAA,UAAQM,IAAI,aACZR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,WAAlB,SACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAlB,aE9COM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC7C,EAAA8C,EAAA,GAAAC,KAAA/C,EAAAgD,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MDDdW,IAASC,OACPtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,WAAP,KACEvB,EAAAC,EAAAC,cAACsB,EAAD,OAEFC,SAASC,eAAe,SAc1B7D,QAAQ8D,KATR,WACEnD,EAASiD,SAASC,eAAe,UACjCjD,EAAMD,EAAOkB,WAAW,MAExBlB,EAAOL,MAAQK,EAAOH,OAAS,IAE/BI,EAAIqB,UAAY,QAChBrB,EAAIsB,SAAS,EAAG,EAAGvB,EAAOL,MAAOK,EAAOH,SAO1CoC","file":"static/js/main.4e8e1f8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OpenDyslexic-Bold.98706a4b.otf\";","import React, { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport './style.css';\nimport './fonts/open-dyslexic/OpenDyslexic-Bold.otf';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction App() {\n  const { height, width } = useWindowDimensions();\n  let canvas;\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let canvasScale = width/1280;\n    canvas.width = 1280 * canvasScale;\n    canvas.height = 720 * canvasScale;\n    console.log(canvas.width + \"height: \" + canvas.height);\n    ctx.fillStyle = 'rgb(15, 15, 15)';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n   }, []);\n\n  return (\n    <div className=\"App\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\" />\n    <head>\n\t  </head>\n\t  <body> \n      <div className=\"title\">\n        Krab Kingdom\n      </div>\n      <canvas ref={canvasRef}/>\n      <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\n      <script src=\"modal.js\"></script>\n      <div className='center'>\n      <div className=\"buttonsBorder\">\n        <button className=\"newGame\">Start</button>\n        <button className=\"info\">Info</button>\n      </div>\n      </div>\n\t  </body>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nlet canvas, ctx;\n\nfunction init(){\n  canvas = document.getElementById('canvas');\n  ctx = canvas.getContext('2d');\n\n  canvas.width = canvas.height = 600;\n\n  ctx.fillStyle = 'black';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n}\nexports.init = init;\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"sourceRoot":""}